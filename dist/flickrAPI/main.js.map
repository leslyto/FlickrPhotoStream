{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/photoFilter.ts","webpack:///./src/app/photos/photos.component.css","webpack:///./src/app/photos/photos.component.html","webpack:///./src/app/photos/photos.component.ts","webpack:///./src/app/services/flickr.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container-fluid\\\">\\n  <h1> Flickr Photo Stream <small>by Stefan Stoev</small></h1>\\n  <app-photos></app-photos>\\n</div>\\n\"","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\"\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\nimport { AppComponent } from './app.component'\nimport { PhotosComponent } from './photos/photos.component'\nimport { PhotoFilter } from './photoFilter'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PhotosComponent,\n    PhotoFilter\n  ],\n  imports: [\n    BrowserModule,\n    InfiniteScrollModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, Pipe, PipeTransform } from '@angular/core'\r\nimport { PhotosComponent } from './photos/photos.component'\r\n\r\n@Pipe({\r\n  name: 'photoFilter'\r\n})\r\n@Injectable()\r\n\r\nexport class PhotoFilter implements PipeTransform {\r\n  transform(photos, args: any[]): any {\r\n    if(!args) \r\n      return photos\r\n    return photos.filter(photo => {\r\n      return photo.title.toLowerCase().includes(args)\r\n    })\r\n  }\r\n}","module.exports = \".photo_wrap {\\r\\n    float: left;\\r\\n    height: 320px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.photo {\\r\\n    height: 320px;\\r\\n    min-width: 280px;\\r\\n    background-color: rgba(255, 255, 255, 0.06);\\r\\n    border-radius: 2px;\\r\\n    padding-top: 15px;\\r\\n}\\r\\n\\r\\n.image_wrap {\\r\\n    margin: 0 auto;\\r\\n    width: 280px;\\r\\n    height: 200px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.photo:hover {\\r\\n    background-color: rgba(255, 255, 255, 0.15);\\r\\n}\\r\\n\\r\\n.image_wrap img {\\r\\n    max-width: 280px;\\r\\n    max-height: 200px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.helper {\\r\\n    display: inline-block;\\r\\n    height: 100%;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    padding: 5px 20px 5px 20px;\\r\\n    font-size: 14px;\\r\\n    word-break: break-word; /*prevent overflow of title text*/\\r\\n}\\r\\n\\r\\n.info a {\\r\\n    color: #b9b9b9;\\r\\n}\\r\\n\\r\\n.info a:hover {\\r\\n    color: #b9b9b9;\\r\\n}\\r\\n\\r\\n.input-group {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.clear {\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\n.modal-body {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.modal-body a {\\r\\n    color: #b9b9b9;\\r\\n}\\r\\n\\r\\n.modal-header {\\r\\n    border-bottom: 1px solid #404040;\\r\\n}\\r\\n\\r\\n.modal-footer {\\r\\n    border-top: 1px solid #404040;\\r\\n}\\r\\n\\r\\n.modal-header, .modal-body, .modal-footer {\\r\\n    background-color: rgb(51, 51, 51);\\r\\n}\\r\\n\\r\\n.photo_info {\\r\\n    margin-top: 10px;\\r\\n    text-align: left;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <!-- Search images from flickr.com -->\\r\\n  <div class=\\\"input-group col-12 col-sm-12 col-md-6\\\">\\t\\t    \\r\\n    <input id=\\\"search-flickr-input\\\" [(ngModel)]=\\\"searchWord\\\" (keyup.enter)=\\\"getPhotos()\\\" name=\\\"searchFlickr\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search flickr...\\\" required>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n      <button id=\\\"search-flickr-btn\\\" (click)=\\\"getPhotos()\\\" class=\\\"btn btn-default\\\">Search flickr</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Filter currently loaded photos by title of photo  -->\\r\\n  <div class=\\\"input-group col-12 col-sm-12 col-md-4\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <button class=\\\"btn btn-default\\\">Filter</button>\\r\\n    </div>\\r\\n    <input [(ngModel)]=\\\"filterText\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Filter photos by title...\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Infinite scroll options -->\\r\\n<div class=\\\"search-results\\\"\\r\\n    infiniteScroll\\r\\n    [infiniteScrollDistance]=\\\"3\\\"\\r\\n    [infiniteScrollThrottle]=\\\"50\\\"\\r\\n    (scrolled)=\\\"onScroll()\\\">\\r\\n    \\r\\n  <div *ngFor=\\\"let photo of (photos | photoFilter : filterText)\\\" class=\\\"photo_wrap col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3\\\">\\r\\n    <div class=\\\"photo\\\">\\r\\n      <div class=\\\"image_wrap\\\">\\r\\n        <span class=\\\"helper\\\"></span> <!-- Helper class is used to vertically align the image if its height is less than the height of the div -->\\r\\n          <!-- To optimize performance and content loading display thumbnail size pictures using flickr's API option (320px on longest side) -->\\r\\n          <!-- Modal opening on click with more detailed information and bigger picture -->\\r\\n          <img (click)=\\\"showInfo(content, photo)\\\" src=\\\"https://farm{{photo.farm}}.staticflickr.com/{{photo.server}}/{{photo.id}}_{{photo.secret}}_n.jpg\\\" alt=\\\"pic\\\">\\r\\n      </div>\\r\\n      <div class=\\\"info\\\">\\r\\n\\r\\n        <strong> TITLE: </strong>\\r\\n        <a href=\\\"https://www.flickr.com/photos/{{photo.owner}}/{{photo.id}}\\\"> <!-- Link to original size photo in flickr website -->\\r\\n          <!-- Restrict title length to 70 characters to prevent overflow and show \\\"N/A\\\" if the photo has no title -->\\r\\n          {{ photo.title.length > 70 ? (photo.title | slice:0:70) + '..' : photo.title || \\\"N/A\\\" }}\\r\\n        </a><br>\\r\\n\\r\\n        <strong> AUTHOR: </strong> \\r\\n        <a href=\\\"https://www.flickr.com/people/{{photo.owner}}/\\\"> View flickr page</a> <!-- Link to authors flickr page -->\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- If search returns no matches -->\\r\\n  <div *ngIf=\\\"(photos | photoFilter : filterText) && (photos | photoFilter : filterText).length === 0\\\">\\r\\n    <p>No matches</p>\\r\\n  </div>\\r\\n  <div class=\\\"clear\\\"></div> <!-- Fix for Infinite scroll  -->\\r\\n</div>\\r\\n\\r\\n<!-- Modal Photo Info -->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\" id=\\\"test\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Photo info</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <img src=\\\"https://farm{{photoInfo.photo.farm}}.staticflickr.com/{{photoInfo.photo.server}}/{{photoInfo.photo.id}}_{{photoInfo.photo.secret}}_z.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"pic\\\">\\r\\n      <div class=\\\"photo_info\\\">\\r\\n\\r\\n        <p><strong>Title: </strong><span>{{photoInfo.photo.title._content }} </span></p>\\r\\n        \\r\\n        <p><strong>Description: </strong><span [innerHTML]=\\\"photoInfo.photo.description._content\\\"></span></p> <!-- Using html binding because descriptions often return html tags -->\\r\\n        \\r\\n        <p><strong>Author: </strong><a href=\\\"https://www.flickr.com/people/{{photoInfo.photo.owner.nsid}}/\\\">{{photoInfo.photo.owner.realname ? photoInfo.photo.owner.realname : photoInfo.photo.owner.username }} </a></p>\\r\\n\\r\\n        <p><strong>Tags (clickable): </strong><span *ngFor=\\\"let tag of photoInfo.photo.tags.tag ; let isLast=last\\\"> \\r\\n          <a href=\\\"https://www.flickr.com/photos/tags/{{tag.raw}}\\\">{{tag.raw}}{{isLast ? '' : ', '}} </a></span> <!-- Added link for tags leading to flickr -->\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\"","import { Component, OnInit } from '@angular/core'\nimport { FlickrService } from '../services/flickr.service'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n  selector: 'app-photos',\n  templateUrl: './photos.component.html',\n  styleUrls: ['./photos.component.css']\n})\nexport class PhotosComponent implements OnInit {\n  photos\n  photoInfo\n  searchWord: string = \"London\" // default search set to \"London\" when launching the app for the purpose of presentation\n  filterText: string = \"\" \n  page: number\n\n  constructor(private FlickrService: FlickrService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getPhotos()\n  }\n\n  getPhotos() {\n    if(this.searchWord !== \"\") {\n      this.FlickrService.getPhotos(this.searchWord)\n        .subscribe(\n          results => this.loadPhotos(results), \n          err => this.handleError(err)\n        )\n      this.page = 1\n    }\n  }\n  \n  loadPhotos(data) {\n    this.photos = data.photos.photo\n  }\n\n  onScroll() {\n    // Getting more photos by querying next page results from flickr\n    this.page = this.page + 1\n    this.FlickrService.getPhotos(this.searchWord, this.page)\n      .subscribe(\n        results => this.appendPhotos(results), \n        err => this.handleError(err)\n      )\n  }\n\n  appendPhotos(new_photos) {\n    this.photos = this.photos.concat(new_photos.photos.photo)\n  }\n\n  showInfo(content,photo) {\n    this.FlickrService.getPhotoInfo(photo)\n      .subscribe(\n        photoInfo => {\n          this.photoInfo = photoInfo\n          this.modalService.open(content, { centered: true, size: 'lg' })\n        },\n        err => this.handleError(err)\n      )\n  }\n\n  checkIfResults() {\n    return this.photos.length === 0\n  }\n  \n  handleError(error) {\n    let errMsg: string;\n    if (error instanceof HttpErrorResponse) {                \n      errMsg = `${error.status} - ${error.statusText || ''} - ${error.message}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.log(errMsg); \n  }\n\n}\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, throwError } from 'rxjs'\r\nimport { catchError } from 'rxjs/operators'\r\nimport { HttpErrorResponse } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlickrService {\r\n\r\n  private flickrApiUrl: string = 'https://api.flickr.com/services/rest/' // URL to flickr search photos API\r\n  private apiKey: string = '6f93d9bd5fef5831ec592f0b527fdeff'\r\n  private queryParams : any;\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.queryParams = {\r\n      'api_key' : this.apiKey,            \r\n      'format' : 'json',\r\n      'nojsoncallback' : '1',\r\n    };\r\n  }\r\n\r\n  getPhotos(searchWord, page = 1) {\r\n    this.queryParams['method'] = 'flickr.photos.search';\r\n    this.queryParams['text'] = searchWord;\r\n    this.queryParams['per_page'] = 30;\r\n    this.queryParams['page'] = page;\r\n    return this.http.get(this.flickrApiUrl, { params : this.queryParams })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getPhotoInfo(photo) {\r\n    this.queryParams['method'] = 'flickr.photos.getInfo';\r\n    this.queryParams['photo_id'] = photo.id;\r\n    return this.http.get(this.flickrApiUrl, { params : this.queryParams })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // Return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later.');\r\n  };\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}